{"remainingRequest":"/home/nicolasipr/Documents/Programming/Software/Front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nicolasipr/Documents/Programming/Software/Front/src/pages/ShopGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nicolasipr/Documents/Programming/Software/Front/src/pages/ShopGrid.vue","mtime":1563160599908},{"path":"/home/nicolasipr/Documents/Programming/Software/Front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nicolasipr/Documents/Programming/Software/Front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nicolasipr/Documents/Programming/Software/Front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ProductGridItem from '../components/ProductGridItem'\nimport { mapGetters } from 'vuex'\n\nexport default {\n\n  name: 'ShopGrid',\n  components: {\n    ProductGridItem\n  },\n  computed: {\n    ...mapGetters(['productsByType', 'productsByCategory']),\n    products() {\n      return this.productsByType(this.type)\n    },\n  },\n  props: {\n    type: String,\n    category: String\n  },\n  data () {\n    return {\n      filtered: [],\n      selectedCategory: this.$t('shopGrid.all'),\n      sortOption: 'newest'\n    }\n  },\n  created () {\n    this.filtered = this.products\n    if(this.$attrs.filter) {\n      this.selectedCategory = this.$attrs.filter\n      this.handleFilter(this.$attrs.filter)\n    }\n  },\n  methods: {\n    handleFilter(category) {\n      this.selectedCategory = category\n      this.filtered = category !== 'All' ? this.productsByCategory(this.type, category) : this.products\n      this.handleSort()\n    },\n    handleSort() {\n      switch(this.sortOption) {\n        case 'newest':\n          this.filtered.sort((a,b) => b.id - a.id)\n          break\n\n        case 'nameAZ':\n          this.filtered.sort((a,b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\n          break\n\n        case 'nameZA':\n          this.filtered.sort((a,b) => a.name.toLowerCase() > b.name.toLowerCase() ? -1 : 1)\n          break\n\n        case 'priceL2H':\n          this.filtered.sort((a,b) => a.price - b.price)\n          break\n\n        case 'priceH2L':\n          this.filtered.sort((a,b) => b.price - a.price)\n          break\n\n        default:\n          this.filtered = this.products\n      }\n    }\n  }\n}\n",{"version":3,"sources":["ShopGrid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ShopGrid.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <b-container class=\"bg--gray\" fluid>\n    <b-container class=\"header__margin pl-5 pr-5\">\n      <b-row>\n          <b-col lg=\"12\">\n              <div class=\"bradcaump__inner text-center mt-5\">\n                <h2 class=\"bradcaump-title mb-3\">{{type}}</h2>\n                <p class=\"bradcaump-content\">{{$t(`shopGrid.descriptions.${type}`)}}</p>\n              </div>\n          </b-col>\n      </b-row>\n      <b-row class=\"pt-5 pb-5\">\n        <b-col lg=\"3\" cols=\"12\">\n          <div class=\"shop__sidebar\">\n            <aside class=\"wedget__categories poroduct--cat\">\n              <h3 class=\"wedget__title\">{{$t('common.categories')}}</h3>\n              <ul>\n                <li class=\"pl-1 pr-1\"><router-link :to=\"type\" @click.native=\"handleFilter($t('shopGrid.all'))\" :class=\"selectedCategory === $t('shopGrid.all') ? 'active' : ''\">{{$t('shopGrid.all')}}</router-link></li>\n                <li v-for=\"category in $t(`common.categoriesList.${type}`)\" :key=\"category\" class=\"pl-1 pr-1\"><router-link :to=\"`${type}?f=${category}`\" @click.native=\"handleFilter(category)\" :class=\"selectedCategory === category ? 'active' : ''\">{{category}}</router-link></li>\n              </ul>\n            </aside>\n          </div>\n        </b-col>\n        <b-col lg=\"9\" cols=\"12\" class=\"pb-5\">\n          <div class=\"shop__list__wrapper d-flex flex-wrap flex-md-nowrap justify-content-center pl-3 pr-3\">\n            <!-- <p>{{`${$t('shopGrid.showing')} 1â€“12 ${$t('shopGrid.of')} ${filtered.length} ${$t('shopGrid.results')}`}}</p> -->\n            <div class=\"orderby__wrapper\">\n              <span>{{$t('shopGrid.sortBy')}}</span>\n              <select class=\"shot__byselect\" v-model=\"sortOption\" @change=\"handleSort\">\n                <option value=\"newest\">{{$t('shopGrid.sortOptions.newest')}}</option>\n                <option value=\"nameAZ\">{{$t('shopGrid.sortOptions.nameAZ')}}</option>\n                <option value=\"nameZA\">{{$t('shopGrid.sortOptions.nameZA')}}</option>\n                <option value=\"priceL2H\">{{$t('shopGrid.sortOptions.priceL2H')}}</option>\n                <option value=\"priceH2L\">{{$t('shopGrid.sortOptions.priceH2L')}}</option>\n              </select>\n            </div>\n          </div>\n          <b-row>\n            <ProductGridItem v-for=\"product in filtered\" :key=\"product.id\" :info=\"product\"/>\n          </b-row>\n          <!-- <ul class=\"wn__pagination mt-3\">\n            <li class=\"active\"><a href=\"#\">1</a></li>\n            <li><a href=\"#\">2</a></li>\n            <li><a href=\"#\">3</a></li>\n            <li><a href=\"#\">4</a></li>\n          </ul> -->\n        </b-col>\n      </b-row>\n    </b-container>\n  </b-container>\n</template>\n\n<script>\nimport ProductGridItem from '../components/ProductGridItem'\nimport { mapGetters } from 'vuex'\n\nexport default {\n\n  name: 'ShopGrid',\n  components: {\n    ProductGridItem\n  },\n  computed: {\n    ...mapGetters(['productsByType', 'productsByCategory']),\n    products() {\n      return this.productsByType(this.type)\n    },\n  },\n  props: {\n    type: String,\n    category: String\n  },\n  data () {\n    return {\n      filtered: [],\n      selectedCategory: this.$t('shopGrid.all'),\n      sortOption: 'newest'\n    }\n  },\n  created () {\n    this.filtered = this.products\n    if(this.$attrs.filter) {\n      this.selectedCategory = this.$attrs.filter\n      this.handleFilter(this.$attrs.filter)\n    }\n  },\n  methods: {\n    handleFilter(category) {\n      this.selectedCategory = category\n      this.filtered = category !== 'All' ? this.productsByCategory(this.type, category) : this.products\n      this.handleSort()\n    },\n    handleSort() {\n      switch(this.sortOption) {\n        case 'newest':\n          this.filtered.sort((a,b) => b.id - a.id)\n          break\n\n        case 'nameAZ':\n          this.filtered.sort((a,b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\n          break\n\n        case 'nameZA':\n          this.filtered.sort((a,b) => a.name.toLowerCase() > b.name.toLowerCase() ? -1 : 1)\n          break\n\n        case 'priceL2H':\n          this.filtered.sort((a,b) => a.price - b.price)\n          break\n\n        case 'priceH2L':\n          this.filtered.sort((a,b) => b.price - a.price)\n          break\n\n        default:\n          this.filtered = this.products\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n</style>"]}]}